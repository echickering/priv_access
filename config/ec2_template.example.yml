AWSTemplateFormatVersion: '2010-09-09'
Description: Template to deploy an EC2 instance with IMDSv2, default encryption, security groups, network interfaces, and Elastic IPs.

Parameters:
  MyVpcId:
    Type: String
    Description: The VpcId where resources will be deployed
  AMIId:
    Type: AWS::EC2::Image::Id
    Description: The ID of the AMI to launch.
  KeyName:
    Type: String
    Description: The EC2 Key Pair name to allow SSH access to the instance.
  EC2UserData:
    Type: String
    Default: ""
    Description: Base64-encoded user data to provide when launching the instance.
  InstanceType1:
    Type: String
    Description: EC2 instance type.
  UnTrustID1:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the subnet to launch the public interface into.
  TrustID1:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the subnet to launch the management and private interfaces into.
  InstanceName1:
    Type: String
    Description: The name of the EC2 instance for tagging purposes.
  NetworkBorderGroupValue1:
    Type: String
    Description: The Network Border Group used for the Elastic IP allocation

Resources:
  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow specific ingress traffic.
      VpcId: !Ref MyVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 500
          ToPort: 500
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 4500
          ToPort: 4500
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 4501
          ToPort: 4501
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          CidrIp: 108.44.161.0/24          

  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all RFC-1918 addresses ingress all traffic.
      VpcId: !Ref MyVpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 10.0.0.0/8
        - IpProtocol: -1
          CidrIp: 172.16.0.0/12
        - IpProtocol: -1
          CidrIp: 192.168.0.0/16
        - IpProtocol: -1
          CidrIp: 108.44.161.0/24

  PublicEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      NetworkBorderGroup: !Ref NetworkBorderGroupValue1

  MgmtEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      NetworkBorderGroup: !Ref NetworkBorderGroupValue1

  PublicInterface1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref UnTrustID1
      Description: Public interface
      GroupSet:
        - !Ref PublicSecurityGroup
      SourceDestCheck: false
      Tags:
        - Key: Name
          Value: PublicInterface

  MgmtInterface1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref TrustID1
      Description: Management interface
      GroupSet:
        - !Ref PrivateSecurityGroup
      SourceDestCheck: false
      Tags:
        - Key: Name
          Value: MgmtInterface

  PrivateInterface1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref TrustID1
      Description: Private interface
      GroupSet:
        - !Ref PrivateSecurityGroup
      SecondaryPrivateIpAddressCount: 1
      SourceDestCheck: false
      Tags:
        - Key: Name
          Value: PrivateInterface

  PublicInterfaceEIPAssociation1:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt PublicEIP1.AllocationId
      NetworkInterfaceId: !Ref PublicInterface1

  MgmtInterfaceEIPAssociation1:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt MgmtEIP1.AllocationId
      NetworkInterfaceId: !Ref MgmtInterface1

  MyLaunchTemplate1:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub "${InstanceName1}-launch-template"
      LaunchTemplateData:
        ImageId: !Ref AMIId
        InstanceType: !Ref InstanceType1
        KeyName: !Ref KeyName
        MetadataOptions:
          HttpTokens: required
        UserData: !Ref EC2UserData
        BlockDeviceMappings:
          - DeviceName: "/dev/xvda"
            Ebs:
              Encrypted: false
              DeleteOnTermination: true
              VolumeSize: 60
              VolumeType: gp2

  EC2Instance1:
    DependsOn: PublicInterfaceEIPAssociation1
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate1
        Version: !GetAtt MyLaunchTemplate1.LatestVersionNumber
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref PublicInterface1
          DeviceIndex: 0
        - NetworkInterfaceId: !Ref MgmtInterface1
          DeviceIndex: 1
        - NetworkInterfaceId: !Ref PrivateInterface1
          DeviceIndex: 2
      Tags:
        - Key: Name
          Value: !Ref InstanceName1

Outputs:
  InstanceId1:
    Description: The Instance ID of the EC2 instance
    Value: !Ref EC2Instance1
  PublicSecurityGroupId:
    Description: The ID of the public security group
    Value: !Ref PublicSecurityGroup
  PrivateSecurityGroupId:
    Description: The ID of the private security group
    Value: !Ref PrivateSecurityGroup
  PublicInterface1:
    Description: The ID of the Public Network Interface
    Value: !Ref PublicInterface1
  MgmtInterface1:
    Description: The ID of the Management Network Interface
    Value: !Ref MgmtInterface1
  PrivateInterface1:
    Description: The ID of the Private Network Interface
    Value: !Ref PrivateInterface1
  PublicEIP1:
    Description: The Elastic IP address associated with the Public Interface
    Value: !Ref PublicEIP1
  MgmtEIP1:
    Description: The Elastic IP address associated with the Management Interface
    Value: !Ref MgmtEIP1
